{"version":3,"sources":["logo.lifeafter.png","Gacha.js","App.js","reportWebVitals.js","index.js"],"names":["Gacha","props","calcWeight","list","reduce","accumulator","current","weight","handleGacha","statusNum","pick","skillNum","skill","currentResult","attack","checkDuplication","i","result","setState","state","count","totalWeight","Object","entries","Data","key","value","target","Math","random","this","s","l","item","Error","Grid","container","justify","xs","sm","Typography","variant","TableContainer","component","Paper","style","marginBottom","Table","align","TableBody","TableRow","TableCell","width","status1","status2","status3","Button","color","onClick","React","Component","App","className","src","logo","alt","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.832855a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.lifeafter.d0f4f2fe.png\";","import React from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport Data from './dataGachaArms.json';\n\nclass Gacha extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0,\n      totalWeight: {},\n      currentResult: {}\n    };\n    \n    // データの重み計算をしておく\n    for (const [key, value] of Object.entries(Data)) {\n      this.state.totalWeight[ key ] = this.calcWeight(value);\n    }\n  }\n\n  // 全体の重み計算\n  calcWeight = (list) => {\n    return list.reduce((accumulator, current) => {\n      return { weight: accumulator.weight + current.weight }\n    }).weight;\n  }\n\n  /**\n   * ガチャを回す\n   */\n  pick(target) {\n    // 抽選\n    const result = Math.random() * this.state.totalWeight[ target ];\n\n    // 抽選結果を返す\n    let s = 0.0;\n    for (const l of Data[ target ]) {\n      s += l.weight;\n      if ( result < s ) return l.item;\n    }\n    throw new Error('should not reach here');\n  }\n\n  // ガチャボタンハンドラ\n  handleGacha = () => {\n    const statusNum = this.pick(\"statusNum\");\n    const skillNum  = this.pick(\"skillNum\");\n    const skill     = skillNum ? this.pick(\"skill\") : \"\";\n    let currentResult = {\n      attack:    this.pick(\"attack\"),\n      skillNum:  skillNum,\n      skill:     skill,\n    };\n\n    // ステータス\n    let checkDuplication = {};\n    for (let i = 1; i < statusNum + 1; i++) {\n      let result;\n      do {\n        result = this.pick(\"status\");\n      } while (checkDuplication[ result ]);\n      checkDuplication[ result ] = true;\n      currentResult[ \"status\" + i ] = result;\n    }\n\n    this.setState({ \"count\": this.state.count + 1, \"currentResult\": currentResult });\n  }\n\n  render() {\n    return (\n      <Grid container justify=\"center\">\n      <Grid item xs={6} sm={4}>\n        <Typography variant=\"h6\">武器改造シミュレーター</Typography>\n        <TableContainer component={Paper} style={ {marginBottom: 20} }>\n          <Table>\n            <caption align=\"right:\">試行回数 {this.state.count}</caption>\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\" width=\"120\">攻撃力</TableCell>\n                <TableCell>{this.state.currentResult.attack}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{this.state.currentResult.status1}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{this.state.currentResult.status2}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{this.state.currentResult.status3}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">追加スキル</TableCell>\n                <TableCell>{this.state.currentResult.skill}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleGacha}> 武器改造 </Button>\n      </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Gacha;\n","import { Typography, Link } from '@material-ui/core';\nimport logo from './logo.lifeafter.png';\nimport './App.css';\nimport Gacha from './Gacha';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"\" alt=\"logo\" />\n      </header>\n      <Gacha />\n      <footer className=\"App-footer\">\n        <Typography variant=\"body2\" color=\"textWhite\">\n          {'Service provided by '}\n          <Link href=\"https://twitter.com/LiafLilMuff\">@LiafLillMuff</Link>\n        </Typography>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}