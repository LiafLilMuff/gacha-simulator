{"version":3,"sources":["i18n.js","logo.lifeafter.png","Gacha.js","GachaFormulaMod.js","GachaUpgrade.js","TwitterFollowButton.js","App.js","reportWebVitals.js","index.js"],"names":["resources","en_us","translation","ja_jp","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","Gacha","data","this","totalWeight","Object","entries","key","value","reduce","accumulator","current","weight","target","result","Math","random","Error","s","l","item","gacha","dataGacha","GachaFormulaMod","t","useTranslation","useState","count","setCount","currentResult","setCurrentResult","Grid","container","justify","xs","sm","Typography","variant","gutterBottom","TableContainer","component","Paper","Table","align","TableBody","TableRow","TableCell","width","attack","attribute1","attribute2","attribute3","skill","Box","mt","mb","Button","color","onClick","attrNum","pick","skillNum","results","checkDuplication","i","itemKeys","useStyles","makeStyles","card","display","height","GachaUpgrade","classes","handleRadio","event","preventDefault","Radios","type","list","options","push","FormControlLabel","name","control","Radio","label","RadioGroup","onChange","onSubmit","keys","spacing","FormControl","InputLabel","id","Select","labelId","MenuItem","cards","Card","className","CardContent","FormLabel","Cards","tableRows","Results","isLoadWidgets","TwitterFollowButton","props","React","useEffect","document","createElement","setAttribute","body","appendChild","href","username","data-size","data-lang","data-show-count","App","src","logo","alt","Link","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78957d2d.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport locale_en_us from \"./locale/en_us\";\nimport locale_ja_jp from \"./locale/ja_jp\";\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en_us: { translation: locale_en_us },\n  ja_jp: { translation: locale_ja_jp }\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"ja_jp\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","export default __webpack_public_path__ + \"static/media/logo.lifeafter.d0f4f2fe.png\";","export default class Gacha {\n\n  constructor(data) {\n    this.data = data;\n    this.totalWeight = {};\n\n    // 全体の重み計算\n    const _calcWeight = (list) => {\n      return list.reduce((accumulator, current) => {\n        return { weight: accumulator.weight + current.weight }\n      }).weight;\n    }\n\n    // データの重み計算をしておく\n    for (const [key, value] of Object.entries(data)) {\n      this.totalWeight[key] = _calcWeight(value);\n    }\n  }\n\n  /**\n   * ガチャを回す\n   */\n  pick(target) {\n    // 抽選\n    const result = Math.random() * this.totalWeight[ target ];\n\n    if (!this.data[target])\n      throw new Error(target + ' is not defined in json file.');\n\n    // 抽選結果を返す\n    let s = 0.0;\n    for (const l of this.data[ target ]) {\n      s += l.weight;\n      if ( result < s ) return l.item;\n    }\n    throw new Error('should not reach here');\n  }\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TableContainer, Table, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { Box, Grid, Paper, Typography, Button } from '@material-ui/core';\nimport Gacha from './Gacha.js';\nimport dataGacha from './dataGachaFormulaMod.json';\n\nconst gacha = new Gacha(dataGacha);\n\nfunction GachaFormulaMod() {\n  const { t } = useTranslation();\n  const [count, setCount] = useState(0);\n  const [currentResult, setCurrentResult] = useState({});\n\n  // ガチャボタンハンドラ\n  const handleGacha = () => {\n    const attrNum  = gacha.pick(\"attrNum\");\n    const skillNum = gacha.pick(\"skillNum\");\n    const skill    = skillNum ? gacha.pick(\"skill\") : \"\";\n    let results = {\n      attack:    gacha.pick(\"attack\"),\n      skillNum:  skillNum,\n      skill:     skill,\n    };\n\n    // ステータス\n    let checkDuplication = {};\n    for (let i = 1; i < attrNum + 1; i++) {\n      let result;\n      // カブったら再抽選\n      do {\n        result = gacha.pick(\"attribute\");\n      } while (checkDuplication[ result ]);\n      checkDuplication[ result ] = true;\n      results[\"attribute\"+i] = result;\n    }\n\n    setCount(() => count + 1);\n    setCurrentResult(results);\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={10} sm={4}>\n        <Typography variant=\"h6\" gutterBottom>製法書改造シミュレーター</Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <caption align=\"right:\">試行回数 {count}</caption>\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\" width=\"120\">{t('Attack power')}</TableCell>\n                <TableCell>{currentResult.attack}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{currentResult.attribute1}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{currentResult.attribute2}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">ステータス</TableCell>\n                <TableCell>{currentResult.attribute3}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" align=\"right\">追加スキル</TableCell>\n                <TableCell>{currentResult.skill}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Box mt={2} mb={2}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleGacha}> 製法書改造 </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default GachaFormulaMod;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, TableContainer, Table, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { FormControl, RadioGroup, Radio, FormControlLabel, FormLabel, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Grid, Box, Paper, Typography, Button } from '@material-ui/core';\nimport Gacha from './Gacha.js';\nimport dataGacha from './dataGachaUpgrade.json';\n\nconst gacha = new Gacha(dataGacha);\nconst itemKeys = {\n  \"reagent\": [ \"hp\", \"attack\", \"defence\" ],\n  \"crystal\": [ \"speed\", \"precision\", \"survival\", \"gathering\" ],\n  \"film\":    [ \"battlefield\", \"damage\", \"range\" ],\n  \"component\": [ \"attack\", \"defence\", \"survival\", \"drone\" ]\n};\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'block',\n    height: 220\n  }\n});\n\nfunction GachaUpgrade() {\n  const { t } = useTranslation();\n  const [count, setCount] = useState(0);\n  const [reagent, setReagent] = useState();\n  const [currentResult, setCurrentResult] = useState({});\n  const classes = useStyles();\n\n  const handleRadio = (event) => {\n    event.preventDefault();\n  }\n\n  const handleGacha = (event) => {\n    event.preventDefault();\n\n    let results = {};\n    for (let type of Object.keys(itemKeys)) {\n      const item = event.target[type].value;\n      const target = (type !== 'component')\n        ? type + \".\" + item\n        : type + \".\" + item + \".\" + event.target[\"equipment\"].value;\n      if (item) {\n        results[type] = gacha.pick(target);\n      }\n    }\n\n    setCurrentResult(results);\n    setCount(() => count + 1);\n  }\n\n  const Cards = () => {\n    let cards = [];\n\n    for (let type of Object.keys(itemKeys)) {\n      cards.push(\n        <Grid item sm={5} xs={5} key={`grid${type}`}>\n          <Card key={`card${type}`} className={classes.card}>\n            <CardContent>\n              <FormControl component=\"fieldset\" key={type}>\n                <FormLabel component=\"legend\">{t(type)}</FormLabel>\n                {Radios(type)}\n              </FormControl>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    }\n\n    return cards;\n  }\n\n  const Radios = (type) => {\n    let list = itemKeys[ type ];\n    let options = [];\n\n    for (let item of list) {\n      let key = `radio.${type}.${item}`;\n      options.push(<FormControlLabel name={type} value={item} control={<Radio />} label={t(item)} key={key}/>);\n    }\n\n    return (\n      <RadioGroup name={type} onChange={handleRadio}>\n        {options}\n      </RadioGroup>\n    );\n  }\n\n  const Results = () => {\n    let tableRows = [];\n\n    for (let type of Object.keys(itemKeys)) {\n      let key = `result.${type}`;\n      tableRows.push(\n        <TableRow key={key}>\n          <TableCell component=\"th\" align=\"right\" width=\"100\">{t(type)}</TableCell>\n          <TableCell>{currentResult[type]}</TableCell>\n        </TableRow>\n      );\n    }\n\n    return (<TableBody>{tableRows}</TableBody>);\n  }\n\n  return (\n    <form onSubmit={handleGacha} mt={4}>\n      <Box mt={4} mb={2}>\n        <Typography variant=\"h6\" gutterBottom>格上げシミュレーター</Typography>\n      </Box>\n      <Grid container justify=\"center\" spacing={2} mt={4} mb={10}>\n        <Grid item xs={10} sm={10}>\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"upgrade-equipment-select-label\">{t('equipment')}</InputLabel>\n            <Select name=\"equipment\" labelId=\"upgrade-equipment-select-label\" id=\"upgrade-equipment-select\">\n              <MenuItem value=\"weapon\">{t('weapon')}</MenuItem>\n              <MenuItem value=\"armor\">{t('armor')}</MenuItem>\n              <MenuItem value=\"helmet\">{t('helmet')}</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        {Cards()}\n      </Grid>\n\n      <Grid container justify=\"center\" spacing={1} mt={20}>\n        <Grid item xs={10} sm={4}>\n          <TableContainer component={Paper}>\n            <Table>\n              <caption align=\"right\">試行回数 {count}</caption>\n              {Results()}\n            </Table>\n          </TableContainer>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">格上げ研究</Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default GachaUpgrade;\n","import React from 'react';\n\nlet isLoadWidgets = false;\nexport default function TwitterFollowButton(props) {\n\n  React.useEffect(() => {\n    if (!isLoadWidgets) {\n      const s = document.createElement(\"script\");\n      s.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\n      document.body.appendChild(s);\n      isLoadWidgets = true;\n    }\n  }, []);\n  \n  return (\n    <a\n      href={`https://twitter.com/${props.username}?ref_src=twsrc%5Etfw`}\n      className=\"twitter-follow-button\"\n      data-size=\"large\"\n      data-lang=\"ja\"\n      data-show-count=\"true\"\n    >\n      Follow @{props.username}\n    </a>\n  );\n}\n","import { Box, Typography, Link } from '@material-ui/core';\nimport logo from './logo.lifeafter.png';\nimport './App.css';\nimport GachaFormulaMod from './GachaFormulaMod';\nimport GachaUpgrade from './GachaUpgrade';\nimport TwitterFollowButton from './TwitterFollowButton';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"\" alt=\"logo\" />\n      </header>\n      <GachaFormulaMod />\n      <GachaUpgrade />\n      <footer className=\"App-footer\">\n        <Box mt={0}>\n          <Typography variant=\"body2\" gutterBottom>\n            {'Service provided by M u f f i n in Levin city, Japan'}\n          </Typography>\n          <TwitterFollowButton username=\"LiafLilMuff\" />\n        </Box>\n        <Box mt={3}>\n          <Link href=\"https://twitter.com/life_informal\" target=\"_blank\" rel=\"noopener\">\n            <Typography variant=\"body2\">\n            {'Special thanks to【非公式】ライフアフター最新情報'}\n            </Typography>\n          </Link>\n        </Box>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}